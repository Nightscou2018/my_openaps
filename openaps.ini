[vendor "mmeowlink.vendors.mmeowlink"]
path = ../../mmeowlink-source/
module = mmeowlink.vendors.mmeowlink

[device "pump"]
vendor = mmeowlink.vendors.mmeowlink
extra = pump.ini

[device "dexcom_with_share"]
vendor = openaps.vendors.dexcom
extra = dexcom_with_share.ini

[device "ns-status"]
vendor = openaps.vendors.process
extra = ns-status.ini

[report "monitor/upload-status.json"]
suggested = enact/suggested.json
status = monitor/status.json
use = shell
reservoir = monitor/reservoir.json
reporter = JSON
battery = monitor/battery.json
clock = monitor/clock-zoned.json
json_default = True
device = ns-status
remainder = 
iob = monitor/iob.json
enacted = enact/enacted.json

[vendor "openapscontrib.timezones"]
path = .
module = openapscontrib.timezones

[device "tz"]
vendor = openapscontrib.timezones
extra = tz.ini

[report "monitor/clock-zoned.json"]
use = clock
reporter = JSON
astimezone = False
date = None
adjust = missing
input = monitor/clock.json
device = tz
timezone = 

[device "curl"]
fields = 
cmd = bash
vendor = openaps.vendors.process
args = -c "curl -s https://ksdcgm.azurewebsites.net/api/v1/entries.json | json -e 'this.glucose = this.sgv'"

[report "last_four_pump_hours.json"]
device = pump
hours = 4.0
use = iter_pump_hours
reporter = JSON

[report "last_four_glucose_hours.json"]
device = dexcom_with_share
hours = 4.0
use = iter_glucose_hours
reporter = JSON

[alias]
last_four_hours = report invoke last_four_pump_hours.json last_four_glucose_hours.json
monitor-pump = report invoke monitor/clock.json monitor/temp_basal.json monitor/pumphistory.json monitor/iob.json
monitor-cgm = report invoke monitor/glucose.json
gather-profile = report invoke settings/settings.json settings/bg_targets_raw.json settings/insulin_sensitivities_raw.json settings/basal_profile.json settings/profile.json
gather = ! bash -c "rm -f monitor/*; openaps gather-profile && openaps monitor-cgm && openaps monitor-pump && openaps report invoke monitor/iob.json"
preflight = !bash -c  "rm -f monitor/clock.json && openaps report invoke monitor/clock.json 2>/dev/null && grep -q T monitor/clock.json && echo PREFLIGHT OK || (echo -e \"mmtune: \" && openaps use pump mmtune | grep setFreq && openaps report invoke monitor/clock.json 2>/dev/null && grep -q T monitor/clock.json && echo PREFLIGHT OK ||openaps report invoke monitor/clock.json 2>/dev/null && grep -q T monitor/clock.json && echo PREFLIGHT OK || echo PREFLIGHT FAILED; sleep 2; exit 1)"
alias-name = !bash -c "openaps alias show | cut -d" " -f1

[device "oref0"]
vendor = openaps.vendors.process
extra = oref0.ini

[device "get-profile"]
vendor = openaps.vendors.process
extra = get-profile.ini

[device "calculate-iob"]
vendor = openaps.vendors.process
extra = calculate-iob.ini

[device "determine-basal"]
vendor = openaps.vendors.process
extra = determine-basal.ini

[report "settings/settings.json"]
device = pump
use = read_settings
reporter = JSON

[report "settings/bg_targets_raw.json"]
device = pump
use = read_bg_targets
reporter = JSON

[report "settings/insulin_sensitivities_raw.json"]
device = pump
use = read_insulin_sensitivies
reporter = JSON

[report "settings/basal_profile.json"]
device = pump
use = read_basal_profile_std
reporter = JSON

[report "settings/profile.json"]
use = shell
bg_targets = settings/bg_targets_raw.json
preferences = preferences.json
settings = settings/settings.json
basal_profile = settings/basal_profile.json
reporter = text
json_default = True
device = get-profile
remainder = 
insulin_sensitivities = settings/insulin_sensitivities_raw.json

[report "monitor/pumphistory.json"]
device = pump
hours = 4.0
use = iter_pump_hours
reporter = JSON

[report "monitor/clock.json"]
device = pump
use = read_clock
reporter = JSON

[report "monitor/iob.json"]
profile = settings/profile.json
use = shell
clock = monitor/clock.json
reporter = JSON
json_default = True
pumphistory = monitor/pumphistory.json
device = calculate-iob
remainder = 

[report "monitor/temp_basal.json"]
device = pump
use = read_temp_basal
reporter = JSON

[report "monitor/glucose.json"]
device = dexcom_with_share
count = 5
use = iter_glucose
reporter = JSON

[report "enact/suggested.json"]
profile = settings/profile.json
use = shell
temp_basal = monitor/temp_basal.json
reporter = text
json_default = True
device = determine-basal
remainder = 
iob = monitor/iob.json
glucose = monitor/glucose.json

